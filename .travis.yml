language: java

os: linux
dist: bionic
jdk: openjdk8

cache:
  directories:
  - "$HOME/.m2"

services:
  - docker

branches:
  only:
  - master
  - develop
  # regular expressions for tag name
  - /\d+\.\d+(\.\d+)?(-\S*)?$/

env:
  global:
  # To enable BuildKit, set the DOCKER_BUILDKIT environment variable to 1
  - DOCKER_BUILDKIT=1

  # Some variables for the temporary postgres container
  - POSTGRES_ADDR="localhost"
  - POSTGRES_DB="meveo"
  - POSTGRES_USER="meveo"
  - POSTGRES_PASSWORD="meveo"
  - POSTGRES_TMP_CONTAINER_NAME="postgres_tmp"

  # get all the branches referencing this commit
  - REAL_BRANCH=$(git ls-remote origin | sed -n "\|$TRAVIS_COMMIT\s\+refs/heads/|{s///p}")

  # or check if we are on a particular branch:
  #- IS_RELEASE=$(git ls-remote origin | grep "$TRAVIS_COMMIT\s\+refs/heads/release$"


before_install:
  #- export BRANCH=$(if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then echo $TRAVIS_BRANCH; else echo $TRAVIS_PULL_REQUEST_BRANCH; fi)
  - echo "REAL_BRANCH=${REAL_BRANCH}, TRAVIS_BRANCH=${TRAVIS_BRANCH}, TAG=${TRAVIS_TAG} !!!"

  - if [ "${REAL_BRANCH}" == "master" ]; then export DOCKER_IMAGE_TAG="latest-anax"; else export DOCKER_IMAGE_TAG="dev-anax"; fi

  - |
    echo "Checking if a CI run is needed post commit: ${TRAVIS_COMMIT_RANGE}"
    if ! git diff --name-only ${TRAVIS_COMMIT_RANGE} | grep -qvE '(\.md$)|(\.png$)|(\.pdf$)|(\.html$)|^(LICENSE)|^(docs)/'
    then
      if [ -z "${TRAVIS_TAG}" ]; then
        echo "Only doc files were updated, not running the CI."
        exit
      fi
    fi

  # Install the latest Docker version (>= 19.03) in order to use BuildKit
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  - sudo apt-get update
  - sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce
  - docker version


# This skips the automatic installation of maven dependency libraries by travis.
# This would save the building time.
install: skip


before_script:
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

  # Pull the necessary docker images in advance
  - docker pull postgres:9.5.21
  - docker pull openjdk:8u242-jdk-slim-buster
  - if docker pull manaty/postgres-meveo:${DOCKER_IMAGE_TAG} > /dev/null; then echo "postgres pulled up"; fi
  - if docker pull manaty/wildfly-meveo:${DOCKER_IMAGE_TAG} > /dev/null; then echo "meveo pulled up"; fi

  # Start the postgres container to create DB schemas
  - docker run -d -p 5432:5432
    --name ${POSTGRES_TMP_CONTAINER_NAME}
    -e POSTGRES_DB=${POSTGRES_DB}
    -e POSTGRES_USER=${POSTGRES_USER}
    -e POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    postgres:9.5.21


script:
  - set -e
  # Wait with timeout 30s until postgres is up
  - |
    timeout=30
    counter=0
    until docker exec -i ${POSTGRES_TMP_CONTAINER_NAME} /usr/bin/pg_isready -h localhost -p 5432
    do
      if [ $counter -gt $timeout ]; then
        echo "ERROR: timeout occurred after waiting $timeout seconds for postgres"
        exit 1
      else
        echo "Waiting for postgres ..."
        counter=$((counter+1))
        sleep 1
      fi
    done
    echo "postgres is up"

  # Creating the database schema
  - cd meveo-model &&
    mvn liquibase:dropAll
      liquibase:update
      -Ddb.url=jdbc:postgresql://${POSTGRES_ADDR}/${POSTGRES_DB}
      -Ddb.username=${POSTGRES_USER}
      -Ddb.password=${POSTGRES_PASSWORD}
      -Prebuild

  # Packaging meveo.war file
  - cd .. && mvn clean package -Dscm.url="scm:git:ssh://git@github.com:meveo-org/meveo.git" -DskipTests

  # Dump the database schema
  - docker exec -i ${POSTGRES_TMP_CONTAINER_NAME} pg_dump --no-owner -U ${POSTGRES_USER} ${POSTGRES_DB} > meveo.sql

  # Copy meveo.sql and meveo.war files into the docker image folder for meveo
  - cp meveo.sql meveo-admin/web/target/meveo.war docker/

  # If branch is master and this build is not triggered from a tag creation, we wouldn't build docker images. 
  # Just it's ok to build the source code for testing.
  # If the build is triggered from a tag creation, $TRAVIS_BRANCH environment is same as the tag name.
  # [ "${TRAVIS_BRANCH}" == "master" ]  => this means it's not a tag creation.
  - |
    if [ "${TRAVIS_BRANCH}" == "master" ]; then
      echo "Source Build OK. Skip to build docker images."
      exit
    fi

  # Build a postgres image for meveo environment
  - docker build
    --cache-from manaty/postgres-meveo:${DOCKER_IMAGE_TAG}
    --tag manaty/postgres-meveo:${DOCKER_IMAGE_TAG}
    --build-arg BUILDKIT_INLINE_CACHE=1
    -f docker/Dockerfile.postgres ./docker

  # Build a meveo image
  - docker build
    --cache-from manaty/wildfly-meveo:${DOCKER_IMAGE_TAG}
    --tag manaty/wildfly-meveo:${DOCKER_IMAGE_TAG}
    --build-arg BUILDKIT_INLINE_CACHE=1
    -f docker/Dockerfile ./docker


after_success:
  - docker push manaty/postgres-meveo:${DOCKER_IMAGE_TAG}
  - docker push manaty/wildfly-meveo:${DOCKER_IMAGE_TAG}
  - |
    if [ ! -z "${TRAVIS_TAG}" ]; then
      docker tag manaty/postgres-meveo:${DOCKER_IMAGE_TAG} manaty/postgres-meveo:${TRAVIS_TAG}
      docker push manaty/postgres-meveo:${TRAVIS_TAG}
      docker tag manaty/wildfly-meveo:${DOCKER_IMAGE_TAG} manaty/wildfly-meveo:${TRAVIS_TAG}
      docker push manaty/wildfly-meveo:${TRAVIS_TAG}
    fi
